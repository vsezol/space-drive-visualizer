name: CI

env:
  is-merge: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
  is-pull-request: ${{ github.event_name == 'pull_request' }}

  NODE_OPTIONS: --max-old-space-size=6144

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  setup:
    name: Set up
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: ./.github/actions/setup-node

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies

      - name: Cache workspace
        uses: ./.github/actions/with-cached-workspace

  lint:
    name: Lint
    permissions:
      contents: 'read'
      actions: 'read'
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download workspace cache
        uses: ./.github/actions/with-cached-workspace

      - name: Derive appropriate SHAs for base and head for 'nx affected' commands
        uses: nrwl/nx-set-shas@v4

      - name: Nx Format Check
        run: npx nx format:check

      - name: 'PR: Lint workspace and affected projects'
        if: env.is-pull-request == 'true'
        run: npm run lint:affected

      - name: 'Merge: Lint workspace and all projects'
        if: env.is-merge == 'true'
        run: npm run lint

  test:
    name: Test
    permissions:
      contents: 'read'
      actions: 'read'
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download workspace cache
        uses: ./.github/actions/with-cached-workspace

      - name: Derive appropriate SHAs for base and head for 'nx affected' commands
        uses: nrwl/nx-set-shas@v4

      - name: 'PR: Test affected projects'
        if: env.is-pull-request == 'true'
        run: npm run test:affected

      - name: 'Merge: Test all projects'
        if: env.is-merge == 'true'
        run: npm run test

  # - name: Setup latest Alpine Linux
  #   uses: jirutka/setup-alpine@v1

  # - name: Set variables
  #   run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

  # - name: Show variables
  #   run: echo "${{ env.NODE_VERSION }}"

  # - name: Run script inside Alpine chroot as root
  #   run: |
  #     apk add nodejs npm
  #     node -v
  #   shell: alpine.sh --root {0}
  # check without root
